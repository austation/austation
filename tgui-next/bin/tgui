#!/bin/bash
## Script for building tgui. Requires MSYS2 to run.
set -e
cd "$(dirname "${0}")/.."
base_dir="$(pwd)"

## Add locally installed node programs to path
PATH="${PATH}:node_modules/.bin"

run-webpack() {
  cd "${base_dir}/packages/tgui"
  exec webpack "${@}"
}

## Mr. Proper
if [[ ${1} == "--clean" ]]; then
  shopt -s globstar
  rm -rf packages/tgui/public/.tmp
  rm -rf **/node_modules
  rm -f **/package-lock.json
<<<<<<< HEAD
=======
}

## Validates current build against the build stored in git
task-validate-build() {
  cd "${base_dir}"
  local diff
  diff="$(git diff packages/tgui/public/tgui.bundle.*)"
  if [[ -n ${diff} ]]; then
    echo "Error: our build differs from the build committed into git."
    echo "Please rebuild tgui."
    exit 1
  fi
  echo "tgui: build is ok"
}

## Installs merge drivers and git hooks
task-install-git-hooks() {
  cd "${base_dir}"
  local git_root
  local git_base_dir
  git_root="$(git rev-parse --show-toplevel)"
  git_base_dir="${base_dir/${git_root}/.}"
  git config --replace-all merge.tgui-merge-bundle.driver \
    "${git_base_dir}/bin/tgui --merge=bundle %O %A %B %L"
  echo "tgui: Merge drivers have been successfully installed!"
}

## Bundle merge driver
task-merge-bundle() {
  local file_ancestor="${1}"
  local file_current="${2}"
  local file_other="${3}"
  local conflict_marker_size="${4}"
  echo "tgui: Discarding a local tgui build"
  ## Do nothing (file_current will be merged and is what we want to keep).
  exit 0
}


## Main
## --------------------------------------------------------

if [[ ${1} == "--merge"* ]]; then
  if [[ ${1} == "--merge=bundle" ]]; then
    shift 1
    task-merge-bundle "${@}"
  fi
  echo "Unknown merge strategy: ${1}"
  exit 1
fi

if [[ ${1} == "--install-git-hooks" ]]; then
  shift 1
  task-install-git-hooks
  exit 0
fi

## Continuous integration scenario
if [[ ${1} == "--ci" ]]; then
  task-clean
  task-install
  task-eslint
  task-webpack --mode=production
  task-validate-build
>>>>>>> 4c71511256... Hardcode tgui script name instead of using $0 (#47553)
  exit 0
fi

## Install dependencies
yarn install

## Run a development server
if [[ ${1} == "--dev" ]]; then
  shift
  cd "${base_dir}/packages/tgui-dev-server"
  exec node --experimental-modules index.js "${@}"
fi

## Run a linter through all packages
if [[ ${1} == '--lint' ]]; then
  shift
  exec eslint ./packages "${@}"
fi

## Analyze the bundle
if [[ ${1} == '--analyze' ]]; then
  run-webpack --mode=production --analyze
fi

## Make a production webpack build
if [[ -z ${1} ]]; then
  eslint packages
  run-webpack --mode=production
fi

## Run webpack with custom flags
run-webpack "${@}"
